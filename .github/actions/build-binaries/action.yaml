name: "Setup, Build, and Test Pyinstaller Binaries"
description: "Build, test and upload binaries to GitHub releases and/or artifacts (ensure poetry dependencies are installed before running this action)"
inputs:
  package_name: # TODO: NC - Project name is probably better
    description: "The name of the package to build and test"
    required: true
  production_release:
    description: "Flag to determine if this is a production release"
    required: true
  operating_system:
    description: "Operating system to set the correct binary path and extension"
    required: true
  architecture:
    description: "Architecture to set the correct binary path and extension"
    required: true
  python_version:
    description: "Python version to use"
    required: true

runs:
  using: "composite"
  steps:
    - name: Set release version
      shell: bash
      continue-on-error: true
      if: ${{ inputs.production_release == 'true' }}
      run: |
        echo "RELEASE_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV
        git describe --tags $(git rev-list --tags --max-count=1)

    - name: Setup release
      shell: bash
      run: |
        mkdir -p ./dist/artifacts
        [ -n "${RELEASE_VERSION}" ] && v="-${RELEASE_VERSION:1}" || v=''
        package_name="${{ inputs.package_name }}${v}-${{ inputs.operating_system }}_${{ inputs.architecture }}"
        echo "PACKAGE_NAME=`echo $package_name | tr '[:upper:]' '[:lower:]'`" >> "${GITHUB_ENV}"

    # GitHub doesn't support expressions in the uses block
    - name: Build & test binary
      if: ${{ inputs.operating_system == 'Windows' }}
      uses: ./.github/actions/build-binaries/windows
      with:
        package_name: ${{ env.PACKAGE_NAME }}}
        architecture: ${{ inputs.architecture }}
        version: ${{ env.RELEASE_VERSION }}

    - name: Build & test binary
      if: ${{ inputs.operating_system == 'Linux' }}
      uses: ./.github/actions/build-binaries/linux
      with:
        package_name: ${{ env.PACKAGE_NAME }}}
        architecture: ${{ inputs.architecture }}
        version: ${{ env.RELEASE_VERSION }}

    - name: Build & test binary
      if: ${{ inputs.operating_system == 'macOS' }}
      uses: ./.github/actions/build-binaries/macos
      with:
        package_name: ${{ env.PACKAGE_NAME }}}
        architecture: ${{ inputs.architecture }}
        version: ${{ env.RELEASE_VERSION }}

    - name: Set TEST_CLI_PATH
      run: |
        TEST_CLI_PATH="${{ github.workspace }}/dist/${{ inputs.package_name }}/${{ inputs.package_name }}"
        if [ "${{ inputs.operating_system }}" == "Windows" ]; then
          TEST_CLI_PATH="${{ github.workspace }}\dist\${{ inputs.package_name }}\${{ inputs.package_name }}.exe"
        fi
        echo "TEST_CLI_PATH=$TEST_CLI_PATH" >> $GITHUB_ENV
      shell: bash

    - name: Run portability tests
      run: |
        echo "Executing: ${{ env.TEST_CLI_PATH }}"
        git config --global user.email "actions@github.com" && git config --global user.name "github-actions" 
        poetry run pytest tests/ -m pyinstaller_binary_tests --cli_path "${{ env.TEST_CLI_PATH }}" --log-cli-level=INFO
      shell: ${{ inputs.operating_system == 'Windows' && 'cmd' || 'bash' }}

    - name: Append artifacts to release
      continue-on-error: true
      if: ${{ inputs.production_release == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./dist/artifacts/*.*
        tag_name: ${{ env.RELEASE_VERSION }}
        prerelease: ${{ contains(env.RELEASE_VERSION, 'beta') }}
